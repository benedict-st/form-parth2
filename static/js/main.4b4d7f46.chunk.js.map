{"version":3,"sources":["reportWebVitals.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/index.js","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/page/editUserPage/editUserPage.jsx","app/utils/validator.js","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","API","parse","getById","id","find","user","update","data","userIndex","findIndex","u","Quality","className","Qualities","map","qual","UserPage","userId","useState","setUser","history","useHistory","useEffect","api","type","onClick","push","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","item","role","Object","keys","defaultProps","SearchStatus","length","number","lastOne","Number","toString","slice","indexOf","renderPhrase","BookMark","status","rest","TableBody","columns","renderContent","column","component","get","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","to","delete","UsersListPage","setCurrentPage","setProfession","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","setUsers","filteredUsers","filter","toLowerCase","count","usersCrop","pageNumber","startIndex","splice","paginate","orderBy","placeholder","onChange","target","value","newArray","pageIndex","Users","useParams","TextField","label","error","defaultValue","showPassword","setShowPassword","htmlFor","prevState","SelectField","defaultOption","options","optionsArray","values","defaultOptionArray","disabled","option","RadioField","defaultChecked","handleChange","checked","MultiSelectField","defaultValueArray","defaultValueName","isMulti","closeMenuOnSelect","classNamePrefix","EditUserPage","setData","setQualities","professionsList","professionName","qualitiesList","optionName","getProfessionById","prof","getQualities","elements","qualitiesArray","elem","quality","String","onSubmit","e","preventDefault","formData","qualitiesData","elementqualities","i","getAttribute","formDataNew","validator","config","errors","validate","validateMethod","statusValidate","trim","test","message","fieldName","CheckBoxField","LoginForm","password","stayOn","setErrors","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","isValid","console","log","RegisterForm","licence","Login","formType","setFormType","toggleFormType","params","Main","NavBar","aria-current","App","exact","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4b4d7f46.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"Jony7351@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"white4571@twipet.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bob007@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"green7311@fam.biz\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"mindgames6878@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"mindes000@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"gov1903@phis.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"electro@underground.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"mono@super.com\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatatata@underground.com\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joe@trib.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"superstar@star.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nconst API = {\n    users,\n    professions,\n    qualities\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ color, name, _id }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\n\nconst QualitiesList = ({ qualities }) => {\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../api\";\nimport Qualities from \"../../ui/qualities\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserPage = ({ userId }) => {\n    const [user, setUser] = useState();\n    const history = useHistory();\n    useEffect(() => {\n        api.users.getById(userId).then((data) => setUser(data));\n    }, []);\n    const handleClick = () => {\n        history.push(`/users/${user._id}/edit`);\n    };\n    if (user) {\n        return (\n            <div>\n                <h1> {user.name}</h1>\n                <h2>Профессия: {user.profession.name}</h2>\n                <Qualities qualities={user.qualities} />\n                <p>completedMeetings: {user.completedMeetings}</p>\n                <h2>Rate: {user.rate}</h2>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={handleClick}\n                >\n                    Изменить\n                </button>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: { path: \"profession.name\", name: \"Профессия\" },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport api from \"../../../api\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nconst UsersListPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const [users, setUsers] = useState();\n    useEffect(() => {\n        api.users.fetchAll().then((data) => setUsers(data));\n    }, []);\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        setUsers(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        const filteredUsers = searchQuery\n            ? users.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? users.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : users;\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nconst Users = () => {\n    const params = useParams();\n    const { userId } = params;\n    return <>{userId ? <UserPage userId={userId} /> : <UsersListPage />}</>;\n};\n\nexport default Users;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({\n    label,\n    type,\n    name,\n    value,\n    onChange,\n    error,\n    defaultValue\n}) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    defaultValue={defaultValue}\n                    // value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    defaultValue: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name,\n    defaultValue\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const defaultOptionArray =\n        typeof defaultOption === \"object\"\n            ? Object.values(defaultOption)\n            : defaultOption;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                // value={value}\n                defaultValue={defaultValue}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOptionArray}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string,\n    defaultValue: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({\n    options,\n    name,\n    onChange,\n    value,\n    label,\n    defaultChecked\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === defaultChecked}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    defaultChecked: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const defaultValueArray =\n        typeof defaultValue === \"object\"\n            ? Object.keys(defaultValue).map((defaultValueName) => ({\n                  label: defaultValue[defaultValueName].name,\n                  value: defaultValue[defaultValueName]._id\n              }))\n            : defaultValue;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValueArray}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array.isRequired\n};\n\nexport default MultiSelectField;\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport api from \"../../../api\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport SelectField from \"../../common/form/selectField\";\r\nimport RadioField from \"../../common/form/radioField\";\r\nimport MultiSelectField from \"../../common/form/multiSelectField\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nexport default function EditUserPage() {\r\n    const params = useParams();\r\n    const { userId } = params;\r\n    const [users, setUser] = useState();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        api.users.getById(userId).then((user) => {\r\n            setUser(user);\r\n        });\r\n    }, []);\r\n\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        profession: \"\",\r\n        sex: \"\",\r\n        qualities: []\r\n    });\r\n\r\n    const [qualities, setQualities] = useState([]);\r\n    const [professions, setProfession] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.professions.fetchAll().then((data) => {\r\n            const professionsList = Object.keys(data).map((professionName) => ({\r\n                label: data[professionName].name,\r\n                value: data[professionName]._id\r\n            }));\r\n            setProfession(professionsList);\r\n        });\r\n        api.qualities.fetchAll().then((data) => {\r\n            const qualitiesList = Object.keys(data).map((optionName) => ({\r\n                value: data[optionName]._id,\r\n                label: data[optionName].name,\r\n                color: data[optionName].color\r\n            }));\r\n            setQualities(qualitiesList);\r\n        });\r\n    }, []);\r\n\r\n    const getProfessionById = (id) => {\r\n        for (const prof of professions) {\r\n            if (prof.value === id) {\r\n                return { _id: prof.value, name: prof.label };\r\n            }\r\n        }\r\n    };\r\n    const getQualities = (elements) => {\r\n        const qualitiesArray = [];\r\n        for (const elem of elements) {\r\n            for (const quality in qualities) {\r\n                if (String(elem.value) === qualities[quality].value) {\r\n                    qualitiesArray.push({\r\n                        _id: qualities[quality].value,\r\n                        name: qualities[quality].label,\r\n                        color: qualities[quality].color\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return qualitiesArray;\r\n    };\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = {};\r\n        const qualitiesData = [];\r\n        let elementqualities = {};\r\n        for (let i = 0; i < e.target.length; i++) {\r\n            if (e.target.elements[i].getAttribute(\"name\") != null) {\r\n                formData[e.target.elements[i].getAttribute(\"name\")] =\r\n                    e.target.elements[i].value;\r\n                if (e.target.elements[i].getAttribute(\"name\") === \"qualities\") {\r\n                    elementqualities = { value: [e.target.elements[i].value] };\r\n                    qualitiesData.push(elementqualities);\r\n                }\r\n            }\r\n        }\r\n\r\n        formData.qualities = qualitiesData;\r\n\r\n        const { profession, qualities } = formData;\r\n        const formDataNew = {\r\n            ...formData,\r\n            profession: getProfessionById(profession),\r\n            qualities: getQualities(qualities)\r\n        };\r\n\r\n        api.users.update(userId, formDataNew).then((data) => setUser(data));\r\n\r\n        history.push(`/users/${userId}`);\r\n    };\r\n    if (users) {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                name=\"name\"\r\n                                value={data.name}\r\n                                defaultValue={users.name}\r\n                                onChange={handleChange}\r\n                                type=\"text\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Электронная почта\"\r\n                                name=\"email\"\r\n                                value={data.email}\r\n                                defaultValue={users.email}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <SelectField\r\n                                label=\"Выбери свою профессию\"\r\n                                defaultOption=\"Choose...\"\r\n                                options={professions}\r\n                                name=\"profession\"\r\n                                onChange={handleChange}\r\n                                value={data.profession}\r\n                                defaultValue={users.profession}\r\n                            />\r\n                            <RadioField\r\n                                options={[\r\n                                    { name: \"Male\", value: \"male\" },\r\n                                    { name: \"Female\", value: \"female\" },\r\n                                    { name: \"Other\", value: \"other\" }\r\n                                ]}\r\n                                value={data.sex}\r\n                                defaultChecked={users.sex}\r\n                                name=\"sex\"\r\n                                onChange={handleChange}\r\n                                label=\"Выберите ваш пол\"\r\n                            />\r\n                            <MultiSelectField\r\n                                options={qualities}\r\n                                onChange={handleChange}\r\n                                value={data.qualities}\r\n                                defaultValue={users.qualities}\r\n                                name=\"qualities\"\r\n                                label=\"Выберите ваши качества\"\r\n                            />\r\n\r\n                            <button\r\n                                className=\"btn btn-primary w-100 mx-auto\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <h1>Loading</h1>;\r\n    }\r\n}\r\n\r\nEditUserPage.propTypes = {\r\n    userId: PropTypes.string\r\n};\r\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport api from \"../../api\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: [],\n        licence: false\n    });\n    const [qualities, setQualities] = useState([]);\n    const [professions, setProfession] = useState([]);\n    const [errors, setErrors] = useState({});\n\n    const getProfessionById = (id) => {\n        for (const prof of professions) {\n            if (prof.value === id) {\n                return { _id: prof.value, name: prof.label };\n            }\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality].value) {\n                    qualitiesArray.push({\n                        _id: qualities[quality].value,\n                        name: qualities[quality].label,\n                        color: qualities[quality].color\n                    });\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => {\n            const professionsList = Object.keys(data).map((professionName) => ({\n                label: data[professionName].name,\n                value: data[professionName]._id\n            }));\n            setProfession(professionsList);\n        });\n        api.qualities.fetchAll().then((data) => {\n            const qualitiesList = Object.keys(data).map((optionName) => ({\n                value: data[optionName]._id,\n                label: data[optionName].name,\n                color: data[optionName].color\n            }));\n            setQualities(qualitiesList);\n        });\n    }, []);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        console.log({\n            ...data,\n            profession: getProfessionById(profession),\n            qualities: getQualities(qualities)\n        });\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professions}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualities}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst Main = () => {\n    return <h1> Main Page</h1>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport EditUserPage from \"./components/page/editUserPage/editUserPage\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\n\nfunction App() {\n    return (\n        <div>\n            <NavBar />\n            <Switch>\n                <Route path=\"/users/:userId/:edit\" component={EditUserPage} />\n                <Route path=\"/users/:userId?\" component={Users} />\n                <Route path=\"/login/:type?\" component={Login} />\n                <Route path=\"/\" exact component={Main} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}